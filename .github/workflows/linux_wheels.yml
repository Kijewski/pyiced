name: Linux Wheels

on:
  workflow_dispatch:
    inputs:

jobs:
  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        version: ['_2_24', '2014', '2010']
        build: ['cp310', 'cp39', 'cp38', 'cp37']
        tag: ['manylinux_x86_64', 'manylinux_i686', 'musllinux_x86_64']

    runs-on: ubuntu-20.04
    name: "${{ matrix.version }}-${{ matrix.build }}-${{ matrix.tag }}"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install requirements
        run: |
          python -m pip install -U pip
          python -m pip install -U wheel setuptools
          python -m pip install -Ur requirements-dev.txt

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_FRONTEND: pip
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux${{ matrix.version }}"
          CIBW_MANYLINUX_I686_IMAGE: "manylinux${{ matrix.version }}"
          CIBW_BUILD: "${{ matrix.build }}-${{ matrix.tag }}"
          CIBW_ARCHS: auto
          CIBW_ENVIRONMENT: PATH=$HOME/.cargo/bin:$PATH
          CIBW_BEFORE_BUILD: |
            yum install -y freetype-devel || true
            yum install -y libxkbcommon-devel || true

            apt-get update || true
            apt-get install -y libfreetype-dev || true
            apt-get install -y libfreetype6-dev || true
            apt-get install -y libxkbcommon-dev || true
            apt-get install -y libxkbcommon-x11-dev || true

            apk update || true
            apk add freetype-dev || true
            apk add libxkbcommon-dev || true

            curl -sSf -o /tmp/rustup-init.sh https://sh.rustup.rs
            sh /tmp/rustup-init.sh -y || true

            python -m pip install -U pip
            python -m pip install -U wheel setuptools
            python -m pip install -Ur requirements-dev.txt
          CIBW_TEST_COMMAND: "{project}/tests/can_load.py"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: "${{ matrix.version }}-${{ matrix.build }}-${{ matrix.tag }}"
          path: ./wheelhouse/*.whl
          retention-days: 3

  merge_wheels:
    runs-on: ubuntu-20.04
    if: ${{ always() }}
    needs: build_wheels
    steps:
      - uses: actions/download-artifact@v3
      - run: mkdir ./merged/
      - run: mv -t ./merged/ ./2010*/*.whl || true
      - run: mv -t ./merged/ ./2014*/*.whl || true
      - run: mv -t ./merged/ ./_2_24*/*.whl || true

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Wheels
          path: ./merged/*.whl
